{# {% extends 'knp_menu.html.twig' %} #}
{% extends "knp-menu/knp_menu.html.twig" %}

{# PL: remove ul by Div #}
{% block list %}
    {% if item.hasChildren and options.depth is not same as(0) and item.displayChildren %}
        {% import "knp_menu.html.twig" as knp_menu %}
        <div id="smallMenuContainer" {{ knp_menu.attributes(listAttributes) }}>
            {{ block('children') }}
        </div>
        <div class="clearFloat">&nbsp;</div>
    {% endif %}
{% endblock %}

{% block children %}
    {% set small = false %}
    {% if item.extras and item.extras.small is defined %}
        {% set small = true %}
    {% endif %}

    {% set itemPerLine = 4 %}
    {% if item.extras and item.extras.itemPerLine is defined %}{% set itemPerLine = item.extras.itemPerLine %}{% endif %}

    {# save current variables #}
    {% set currentOptions = options %}
    {% set currentItem = item %}
    {# update the depth for children #}
    {% if options.depth is not none %}
        {% set options = options|merge({'depth': currentOptions.depth - 1}) %}
    {% endif %}
    {# update the matchingDepth for children #}
    {% if options.matchingDepth is not none and options.matchingDepth > 0 %}
        {% set options = options|merge({'matchingDepth': currentOptions.matchingDepth - 1}) %}
    {% endif %}
    {% for item in currentItem.children %}
        {% if (loop.index-1) % itemPerLine == 0 and not small %}
            <div>
        {% endif %}
        {{ block('item') }}
        {% if loop.index % itemPerLine == 0  and not small %}
            </div>
            <div class="clearFloat"></div>
            {% if itemPerLine and itemPerLine == 3  and not small %} <br/><br/><br/>{% endif %}
        {% endif %}

    {% endfor %}
    {% if currentItem.children|length % itemPerLine != 0  and not small %}</div>{% endif %}
    {# restore current variables #}
    {% set item = currentItem %}
    {% set options = currentOptions %}
{% endblock %}

{# PL: remove <li> tag #}
{% block item %}
    {% if item.displayed %}
        {# building the class of the item #}
        {%- set classes = item.attribute('class') is not empty ? [item.attribute('class')] : [] %}
        {%- if matcher.isCurrent(item) %}
            {%- set classes = classes|merge([options.currentClass]) %}
        {%- elseif matcher.isAncestor(item, options.matchingDepth) %}
            {%- set classes = classes|merge([options.ancestorClass]) %}
        {%- endif %}
        {%- if item.actsLikeFirst %}
            {%- set classes = classes|merge([options.firstClass]) %}
        {%- endif %}
        {%- if item.actsLikeLast %}
            {%- set classes = classes|merge([options.lastClass]) %}
        {%- endif %}

        {# Mark item as "leaf" (no children) or as "branch" (has children that are displayed) #}
        {% if item.hasChildren and options.depth is not same as(0) %}
            {% if options.branch_class is not empty and item.displayChildren %}
                {%- set classes = classes|merge([options.branch_class]) %}
            {% endif %}
        {% elseif options.leaf_class is not empty %}
            {%- set classes = classes|merge([options.leaf_class]) %}
        {%- endif %}

        {%- set attributes = item.attributes %}
        {%- if classes is not empty %}
            {%- set attributes = attributes|merge({'class': classes|join(' ')}) %}
        {%- endif %}
        {# displaying the item #}
        {% import "knp_menu.html.twig" as knp_menu %}
        {%- if item.uri is not empty and (not matcher.isCurrent(item) or options.currentAsLink) %}
            {{ block('linkElement') }}
        {%- else %}
            <div {{ knp_menu.attributes(attributes) }}>
                {{ block('spanElement') }}
            </div>
        {%- endif %}

        {# render the list of children #}
        {%- set childrenClasses = item.childrenAttribute('class') is not empty ? [item.childrenAttribute('class')] : [] %}
        {%- set childrenClasses = childrenClasses|merge(['menu_level_' ~ item.level]) %}
        {%- set listAttributes = item.childrenAttributes|merge({'class': childrenClasses|join(' ') }) %}
        {{ block('list') }}
        </li>
    {% endif %}
{% endblock %}

{% block linkElement %}
    {% import "knp_menu.html.twig" as knp_menu %}
    {% if item.parent.extras and item.parent.extras.small is defined %}
        <a style="margin: 0 10px;padding: 20px 15px;"
           title={{ item.extras.title }} href="{{ item.uri }}"{{ knp_menu.attributes(item.linkAttributes) }}
           class="border-radius-base menuLink {% if matcher.isCurrent(item) %}current bg-rp-blue{% endif %} hoverContainer {% if itemPerLine and itemPerLine == 4 %}step-quarter{% elseif itemPerLine and itemPerLine == 6 %}step-sixth{% elseif itemPerLine and itemPerLine == 5 %}step-cinq{% elseif itemPerLine and itemPerLine == 2 %}step-demi{% else %}step-tiers{% endif %}">
            <img src="{% if matcher.isCurrent(item) and item.extras and item.extras.imageAct is defined %}{{ asset(item.extras.imageAct) }}{% else %}{{ asset(item.extras.image) }}{% endif %}"
                 alt="paiement" class="hoverImage" data-width="{{ item.extras.width }}"
                 style="width: {{ item.extras.width }}px;"
                 {% if item.extras and item.extras.imageAct %}data-actUrl="{{ asset(item.extras.imageAct) }}"{% endif %}>
        </a>
    {% else %}
        <a href="{{ item.uri }}"{{ knp_menu.attributes(item.linkAttributes) }}
           class="p-2 border-radius-base menuLink {% if matcher.isCurrent(item) %}current bg-vault-green{% endif %} step center step-float hoverContainer {% if itemPerLine and itemPerLine == 4 %}step-quarter{% elseif itemPerLine and itemPerLine == 6 %}step-sixth{% elseif itemPerLine and itemPerLine == 5 %}step-cinq{% elseif itemPerLine and itemPerLine == 2 %}step-demi{% else %}step-tiers{% endif %}">
            {% if item.extras is defined and item.extras.image is defined %}
                <img src="{% if matcher.isCurrent(item) and item.extras and item.extras.imageAct is defined %}{{ asset(item.extras.imageAct) }}{% else %}{{ asset(item.extras.image) }}{% endif %}"
                     alt="paiement" class="hoverImage"
                     {% if item.extras and item.extras.imageAct %}data-actUrl="{{ asset(item.extras.imageAct) }}"{% endif %}>
                <hr class="midMargin bg-primary {% if item.extras is defined and item.extras.color is defined %} {% if matcher.isCurrent(item) %}{{ item.extras.color }} bg-white Block{% endif %}{% endif %}" {% if matcher.isCurrent(item) and item.extras is defined and item.extras.color is defined %}{% endif %}>
            {% endif %}
            <p class="font-size-1-3 mid bold my-0 {% if item.extras is defined and item.extras.color is defined %}{% if matcher.isCurrent(item) %} white {% else %} text-primary {% endif %}{% endif %}">{{ block('label') }}</p>
        </a>
    {% endif %}
{% endblock %}
