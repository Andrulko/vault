name: Symfony

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

permissions:
    contents: read

jobs:
    symfony-tests:
        runs-on: ubuntu-latest
        steps:
            # â€”â€” Backend setup ðŸ”§ â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
            -   uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.1'
            -   uses: actions/checkout@v3
            -   name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v3
                with:
                    path: vendor
                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-
            -   name: Start MariaDB
                uses: getong/mariadb-action@v1.1
                with:
                    mysql root password: Pl1PL6axxvOR9eY2
                    mysql database: vault_test
                    mysql user: vault
                    mysql password: Pl1PL6axxvOR9eY2
            -   name: Merge default env vars and CI vars
                run: cat .env.ci >> .env.test
            -   name: Install Dependencies
                run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
            -   name: Dump routes
                run: php bin/console fos:js-routing:dump --format=json --target=public/js/fos_js_routes.json
            # â€”â€” Check coding standards âœ¨ â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
            -   name: Check CS
                run: vendor/bin/php-cs-fixer fix src -v --dry-run --stop-on-violation --using-cache=no
            # â€”â€” Setup frontend ðŸ’„ â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
            -   name: Install and build frontend
                run: yarn && yarn dev
            #      - name: Debug env variables
            #        run: php bin/console debug:dotenv --env=test
            # â€”â€” Run tests âœ… â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
            -   name: Copy keys
                run: mkdir -p var/oauth && cp tests/keys/* var/oauth
            -   name: Debug dotenv
                run: php bin/console debug:dotenv --env=test
            -   name: Run Doctrine Migrations
                run: php bin/console doctrine:migrations:migrate -n --env=test
            -   name: Load v1 fixtures
                run: php bin/console doctrine:fixtures:load --env=test --group=v1 -n
            -   name: Run v1 tests
                run: ./vendor/bin/simple-phpunit tests/v1
            -   name: Load v2 fixtures
                run: php bin/console doctrine:fixtures:load --env=test --group=v2 -n
            -   name: Run v2 tests
                run: ./vendor/bin/simple-phpunit tests/v2 --coverage-cobertura=coverage/cobertura-coverage.xml
            -   name: Check code coverage
                run: php phpunit-check-coverage.php coverage/cobertura-coverage.xml 70
            # â€”â€” Code static analysis âœ¨ â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
            -   name: Static code analysis
                run: vendor/bin/phpstan analyse -c phpstan.dist.neon
